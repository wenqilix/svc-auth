buildscript {
    ext.kotlin_version = '1.5.31'
    ext.spring_boot_version = '2.5.5'
    ext.detekt_version = '1.18.1'
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt_version"
    }
}

group = 'gdsace'

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.gitlab.arturbosch.detekt'

jar {
    archiveBaseName = 'svc-auth'
}

detekt {
    buildUponDefaultConfig = true
    config = files("$projectDir/detekt-config.yml")

    reports {
        html.enabled = true // observe findings in your browser with structure and code snippets
        xml.enabled = true // checkstyle like format mainly for integrations like Jenkins
    }
}

configurations {
    ktlint
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFix(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}

repositories {
    mavenCentral()
    maven { url "https://build.shibboleth.net/nexus/content/repositories/releases" }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_15
  }
}
sourceCompatibility = JavaVersion.VERSION_15
targetCompatibility = JavaVersion.VERSION_15

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version")
    implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version")
    implementation("org.springframework.boot:spring-boot-starter-web:$spring_boot_version")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf:$spring_boot_version")
    implementation("org.springframework.boot:spring-boot-starter-actuator:$spring_boot_version")
    implementation("io.micrometer:micrometer-registry-prometheus:1.7.5")
    implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.4')
    implementation('org.bitbucket.b_c:jose4j:0.7.9')

    testImplementation("org.springframework.boot:spring-boot-starter-test:$spring_boot_version")
    testImplementation('io.mockk:mockk:1.12.0')
    testImplementation('com.ninja-squad:springmockk:3.0.1')

    ktlint("com.pinterest:ktlint:0.42.1")
}
test {
    useJUnitPlatform()
}
